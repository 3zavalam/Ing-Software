import streamlit as st
import pandas as pd
from utils.make_viz.radar import generate_player_radar, generate_2players_radar
from utils.extras.stats import positions_stats, positions_options
import os

# Configure the Streamlit page
st.set_page_config(page_title="游니 Radar Plots", layout="wide", initial_sidebar_state="collapsed")

# Main page title
st.title("游니 Radar Plots")

# Introductory description
st.markdown(
    """ 
    Welcome to the **Radar Plots** section, where you can explore Radar Plots generated by 
    selecting a position and a player (or compare two players).
    """
)

# Add a visual divider
st.markdown("---")

# League selection and data loading
with st.container():
    leagues = ['MLS', 'Liga MX']
    league = st.selectbox(
        'Pick a league:',
        leagues
    )

# Construct the path for the selected league
league_path = os.path.join('./data/radar', league.replace(" ", "_"))

with st.container():
    position = st.selectbox(
        'Pick a position:',
        positions_stats.keys()
    )

# Inicializar un flag para determinar si estamos trabajando con keepers
keeper_flag = False

# Cargar los datos dependiendo de la posici칩n seleccionada
if position in positions_stats:
    valid_positions = positions_options.get(position, [])
    
    if position == 'keepers':
        # Cargar datos de los porteros (keepers)
        df = os.path.join(league_path, 'keepers.csv')
        df = pd.read_csv(df)
        # Filtrar por posiciones v치lidas de los porteros
        df = df[df['keepers_Pos'].isin(valid_positions)]
        keeper_flag = True
    else:
        # Cargar datos de los jugadores (players)
        df = os.path.join(league_path, 'players.csv')
        df = pd.read_csv(df)
        # Filtrar por posiciones v치lidas de los jugadores
        df = df[df['stats_Pos'].isin(valid_positions)]

# Configuraci칩n para la comparaci칩n de jugadores
compare = st.checkbox("Compare with another player?")

# Determinar la columna de los equipos (squad) seg칰n si es keeper o jugador
squads = df['keepers_Squad'].unique() if keeper_flag else df['stats_Squad'].unique()

# Interfaz para seleccionar los equipos y jugadores
with st.container():
    col1, col2 = st.columns(2)
    
    # Columna para el primer jugador
    with col1:
        team1_selected = st.selectbox(
            'Pick Team 1:',
            squads,
            key='team1'
        )

        # Filtrar los jugadores del equipo seleccionado
        team1_players = df[df['keepers_Squad'] == team1_selected]['Player'].unique() if keeper_flag else df[df['stats_Squad'] == team1_selected]['Player'].unique()
        
        player1_name = st.selectbox(
            'Pick Player 1:',
            team1_players,
            key='player1'
        )

    # Si se selecciona comparar, mostrar segunda columna
    if compare:
        with col2:
            team2_selected = st.selectbox(
                'Pick Team 2:',
                squads,
                key='team2'
            )

            # Filtrar los jugadores del equipo 2 seleccionado
            team2_players = df[df['keepers_Squad'] == team2_selected]['Player'].unique() if keeper_flag else df[df['stats_Squad'] == team2_selected]['Player'].unique()
            
            player2_name = st.selectbox(
                'Pick Player 2:',
                team2_players,
                key='player2'
            )

    # Generar los radar plots
    if compare:
        # Generar radar plot para dos jugadores
        fig = generate_2players_radar(df, player1_name, player2_name, position, positions_stats)
        st.pyplot(fig)
    else:
        # Generar radar plot para un solo jugador
        fig = generate_player_radar(df, player1_name, position, positions_stats)
        st.pyplot(fig)
